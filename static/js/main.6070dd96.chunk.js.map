{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactsItem/ContactsItem.module.css","components/Contacts/Contacts.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/Contacts/Contacts.js","components/ContactsItem/ContactsItem.js","App.js","index.js"],"names":["module","exports","INITIAL_STATE","name","number","ContactForm","state","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onSubmit","console","log","reset","className","styles","form","this","label","htmlFor","input","type","pattern","title","required","onChange","button","Component","Filter","onChangeFilter","filter__container","Contacts","children","list","ContactsItem","items","onDeleteContact","map","item","list__item","button__delete","onClick","id","proptypes","PropTypes","shape","string","isRequired","func","App","contacts","filter","addContact","newContact","contact","uuidv4","find","oldContact","toLowerCase","alert","prevState","filterContact","normalizedFilter","includes","deleteContact","deleteName","restContacts","filteredContact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6070dd96.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__GmRc1\",\"label\":\"ContactForm_label__2tB8O\",\"input\":\"ContactForm_input__3CNgm\",\"button\":\"ContactForm_button__1ITJa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__container\":\"Filter_filter__container__ruQ--\",\"label\":\"Filter_label__3JdSt\",\"input\":\"Filter_input__3UYrC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list__item\":\"ContactsItem_list__item__2VJ5R\",\"button__delete\":\"ContactsItem_button__delete__Qe1l6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__TryJv\"};","import { Component } from \"react\";\nimport styles from \"./ContactForm.module.css\";\n\nconst INITIAL_STATE = {\n  name: \"\",\n  number: \"\",\n};\n\nclass ContactForm extends Component {\n  state = { ...INITIAL_STATE };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n\n    console.log(this.state);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  render() {\n    return (\n      <form className={styles.form} onSubmit={this.handleSubmit}>\n        <label className={styles.label} htmlFor=\"name\">\n          Name\n          <input\n            className={styles.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label className={styles.label}>\n          Number\n          <input\n            className={styles.input}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={this.state.number}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button\n          className={styles.button}\n          type=\"submit\"\n          // className={styles.feedbackButton}\n        >\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.css\";\n\nconst Filter = ({ value, onChangeFilter }) => {\n  return (\n    <div className={styles.filter__container}>\n      <label htmlFor=\"filter\" className={styles.label}>\n        Find contacts by name\n        <input\n          className={styles.input}\n          type=\"text\"\n          name=\"filter\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          value={value}\n          onChange={onChangeFilter}\n        />\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChangeFilter: PropTypes.func,\n};\n\nexport default Filter;\n","import styles from \"./Contacts.module.css\";\n\nconst Contacts = ({ children }) => {\n  return <ul className={styles.list}>{children}</ul>;\n};\n\nexport default Contacts;\n","import PropTypes from \"prop-types\";\nimport styles from \"./ContactsItem.module.css\";\n\nconst ContactsItem = ({ items, onDeleteContact }) => {\n  return items.map((item) => {\n    return (\n      <li key={item.id} className={styles.list__item}>\n        {item.name}: {item.number}\n        <button\n          name={item.name}\n          type=\"button\"\n          className={styles.button__delete}\n          onClick={onDeleteContact}\n        >\n          Delete\n        </button>\n      </li>\n    );\n  });\n};\n\nContactsItem.proptypes = {\n  items: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n  onDeleteContact: PropTypes.func,\n};\n\nexport default ContactsItem;\n","import { Component } from \"react\";\nimport ContactForm from \"./components/ContactForm\";\nimport Filter from \"./components/Filter\";\nimport Contacts from \"./components/Contacts\";\nimport ContactsItem from \"./components/ContactsItem\";\n\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addContact = (newContact) => {\n    const contact = {\n      id: uuidv4(),\n      ...newContact,\n    };\n\n    // Проверка на дублирование имени контакта\n    if (\n      this.state.contacts.find((oldContact) => {\n        return oldContact.name.toLowerCase() === contact.name.toLowerCase();\n      })\n    ) {\n      alert(`${contact.name} is already in contacts`);\n    } else {\n      this.setState((prevState) => {\n        return {\n          contacts: [...prevState.contacts, contact],\n        };\n      });\n    }\n  };\n\n  onChangeFilter = (e) => {\n    this.setState({ filter: e.target.value });\n  };\n\n  filterContact = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  deleteContact = (e) => {\n    const { contacts } = this.state;\n    const deleteName = e.target.name;\n    const restContacts = contacts.filter(\n      (contact) => contact.name !== deleteName\n    );\n    this.setState({\n      contacts: restContacts,\n    });\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filteredContact = this.filterContact();\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <Filter onChangeFilter={this.onChangeFilter} value={filter} />\n        <Contacts>\n          <ContactsItem\n            items={filteredContact}\n            onDeleteContact={this.deleteContact}\n          />\n        </Contacts>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}